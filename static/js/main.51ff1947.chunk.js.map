{"version":3,"sources":["components/PriceList.js","components/Logotype.js","components/Dashboard.js","serviceWorker.js","index.js"],"names":["priceTypes","data","title","description","prices","value","unit","type","fontTitle","fontWeight","fontSize","fontDescription","color","whiteSpace","fontPrice","fontPriceType","PriceList","style","display","flexWrap","backgroundColor","padding","gridTemplateColumns","width","minWidth","map","row","gridRow","price","index","gridArea","Logotype","props","version","id","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","transform","fontFamily","letterSpacing","height","layer","position","top","left","Dashoard","backgroundImage","backgroundSize","backgroundPosition","filter","fill","maxHeight","maxWidth","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.51ff1947.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst priceTypes = {\r\n  short: 'kort',\r\n  medium: 'mellan',\r\n  long: 'långt',\r\n}\r\n\r\nconst data = [\r\n  {\r\n    title: 'Klippning långt hår',\r\n    description: 'Klippning och styling av långt hår nedanför axlarna inklusive tvätt & fön.\\nVid långt och tjock hår kan priset öka pga tiden och materialåtgång.',\r\n    prices: [\r\n      {\r\n        value: 550,\r\n        unit: 'kr',\r\n        type: priceTypes.long,\r\n      },\r\n      {\r\n        value: 590,\r\n        unit: 'kr',\r\n        type: priceTypes.medium,\r\n      },\r\n      {\r\n        value: 690,\r\n        unit: 'kr',\r\n        type: priceTypes.long,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Klippning för barn',\r\n    description: 'Barn klippning upp till 11 år.\\nPrisökning kan förekomma vid långt / tjock hår.',\r\n    prices: [\r\n      {\r\n        value: 350,\r\n        unit: 'kr',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst fontTitle = {\r\n  fontWeight: 'bold',\r\n  fontSize: 'large',\r\n}\r\nconst fontDescription = {\r\n  color: 'rgba(255, 255, 255, .5)',\r\n  fontSize: 'small',\r\n  whiteSpace: 'pre-wrap',\r\n}\r\nconst fontPrice = {\r\n  fontWeight: 'bold',\r\n  whiteSpace: 'nowrap',\r\n}\r\nconst fontPriceType = {\r\n  fontSize: 'small',\r\n}\r\n\r\nconst PriceList = () => <div style={ {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  backgroundColor: 'rgba(0, 0, 0, .8)',\r\n  color: 'white',\r\n  padding: 30,\r\n} }>\r\n    <div style={ { display: 'grid', gridTemplateColumns: '5fr 1fr 1fr 1fr', width: '30%', minWidth: 550 } }>\r\n      { data.map(({ title, description, prices }, row) => (<>\r\n        <div style={ { gridRow: row * 2 + 1, ...fontTitle } }>{ title }</div>\r\n        <div style={ { gridRow: row * 2 + 2, ...fontDescription,  } }>{ description }</div>\r\n        { prices.map((price, index) => (\r\n          <>\r\n            <div style={ { gridArea: `${row * 2 + 1} / ${index + 2}`, ...fontPrice } }>{price.value} {price.unit}</div>\r\n            <div style={ { gridArea: `${row * 2 + 2} / ${index + 2}`, ...fontPriceType } }>{price.type}</div>\r\n          </>\r\n        ))\r\n        }\r\n      </>)) }\r\n    </div>\r\n    <div style={ { display: 'grid', gridTemplateColumns: '5fr 1fr 1fr 1fr', width: '30%', minWidth: 550 } }>\r\n      { data.map(({ title, description, prices }, row) => (<>\r\n        <div style={ { gridRow: row * 2 + 1, ...fontTitle } }>{ title }</div>\r\n        <div style={ { gridRow: row * 2 + 2, ...fontDescription,  } }>{ description }</div>\r\n        { prices.map((price, index) => (\r\n          <>\r\n            <div style={ { gridArea: `${row * 2 + 1} / ${index + 2}`, ...fontPrice } }>{price.value} {price.unit}</div>\r\n            <div style={ { gridArea: `${row * 2 + 2} / ${index + 2}`, ...fontPriceType } }>{price.type}</div>\r\n          </>\r\n        ))\r\n        }\r\n      </>)) }\r\n    </div>\r\n    <div style={ { display: 'grid', gridTemplateColumns: '5fr 1fr 1fr 1fr', width: '30%', minWidth: 550 } }>\r\n      { data.map(({ title, description, prices }, row) => (<>\r\n        <div style={ { gridRow: row * 2 + 1, ...fontTitle } }>{ title }</div>\r\n        <div style={ { gridRow: row * 2 + 2, ...fontDescription,  } }>{ description }</div>\r\n        { prices.map((price, index) => (\r\n          <>\r\n            <div style={ { gridArea: `${row * 2 + 1} / ${index + 2}`, ...fontPrice } }>{price.value} {price.unit}</div>\r\n            <div style={ { gridArea: `${row * 2 + 2} / ${index + 2}`, ...fontPriceType } }>{price.type}</div>\r\n          </>\r\n        ))\r\n        }\r\n      </>)) }\r\n    </div>\r\n</div>\r\n\r\nexport default PriceList\r\n","import React from 'react'\r\n\r\nconst Logotype = props =>\r\n//  <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 800 600\" enable-background=\"new 0 0 800 600\" xml:space=\"preserve\">\r\n  <svg { ...props } version=\"1.1\" id=\"Logotype\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 800 400\" enableBackground=\"new 0 0 800 450\" xmlSpace=\"preserve\">\r\n    <text transform=\"matrix(1 0 0 1 257.0295 279.417)\" fontFamily=\"'BodoniFLF-Roman'\" fontSize=\"91\" letterSpacing=\"22\">SAGA</text>\r\n    <rect x=\"174\" y=\"320.5\" width=\"452\" height=\"3.3\"/>\r\n    <text transform=\"matrix(1 0 0 1 304.1572 375.5)\" fontFamily=\"'Montserrat-ExtraLight'\" fontSize=\"16.8\" letterSpacing=\"4\">HÅR &amp; SKÖNHET</text>\r\n  </svg>\r\n\r\nexport default Logotype\r\n","import React from 'react'\r\n\r\nimport PriceList from './PriceList'\r\nimport Logotype from './Logotype'\r\n\r\nconst layer = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n}\r\n\r\nconst Dashoard = () => <>\r\n  <div style={ {\r\n    position: 'relative',\r\n    width: '100vw',\r\n    height: '80vh',\r\n  } }>\r\n    <div style={ {\r\n      ...layer,\r\n      backgroundImage: 'url(https://res.cloudinary.com/timma/image/upload/h_1600,q_90/v1502094741/c/sagas-h-rstudio-edb15e30-7b4a-11e7-976a-7d8ca094ffa6.jpg)',\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      filter: 'grayscale(75%) sepia(50%) brightness(75%)',\r\n    } } />\r\n    <div style={ {\r\n      ...layer,\r\n      backgroundImage: 'linear-gradient(to bottom, rgba(0, 0, 0, .75), rgba(0, 0, 0, 0))',\r\n    } } />\r\n    <div style={ layer }>\r\n      <Logotype fill=\"white\" style={ { maxHeight: '60vh' } }/>\r\n      <div style={ { maxWidth: 670, color: 'white', margin: '0 auto' } }>\r\n        <p>Vi vill hälsa dig varmt välkommen in till någon av våra salonger för en avslappnande stund där just du står i fokus.</p>\r\n        <p>Lämna vardagens stress vid dörren och gå in i en miljö där du kan vara trygg med att vår erfarna och kunniga personal tar hand om dig på bästa sätt.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <PriceList />\r\n  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n  Saga\r\n</>\r\n\r\nexport default Dashoard\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/Dashboard';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}